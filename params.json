{
  "name": "Bootstrapprogressbarmanager",
  "tagline": "Easily manipulate Bootsrap progress bar",
  "body": "# BootstrapProgressbarManager\r\n\r\nEasily manipulate Bootstrap progress bar.\r\n\r\n##Some Features\r\n\r\n1. No need to write html for the progress bar\r\n2. Easily update progress value\r\n2. Easily style bootstrap progress bar \r\n3. Easily create and manage stacked progress bar\r\n\r\n##Usage \r\n \r\nCall the plugin on the container element you want the progress html to be *appended* to\r\nThis will not override existing elements or content of the container element\r\n\r\n   $(selector).progressbarManager( options );\r\n\r\nWhere \r\n*Selector : Jquery selector for the container to append the progress bar html to\r\n*options : Object literal to set the plugin options \r\n\r\n###HTML\r\n\r\n    <div id=\"progress\">\r\n       <strong>Simple Progress  Bar Example</strong>\r\n    </div>\r\n\r\n####Javascript\r\n\r\n```javascript \r\n myProgress = $('#progress').progressbarManager({      \r\n     totalValue : 50,\r\n     initValue : 10 ,\r\n     animate : true ,\r\n     stripe : true\r\n  });\r\n```\r\n\r\nThe above generates:\r\n\r\n```html  \r\n<div id=\"pbm-bootsrap-progress-1\" class=\"progress\">\r\n    <div id=\"pbm-progress-bar-1\" role=\"progress-bar\" aria-valuenow=\"20\" aria-valuemin=\"0\" aria-valuemax=\"100\"     class=\"progress-bar progress-bar-primary active progress-bar-striped\" style=\"width: 20%; min-width: 2em;\">20%</div>\r\n</div>\r\n```\r\n\r\nand appends it to the element with id _progress_. \r\n\r\n_progressbarManager_ returns progress object which you can use to modify the _progress_ element on the fly\r\n  \r\nTo update the value of the progress : \r\n\r\n```javascript \r\n    myProgress.setValue(30 );\r\n```\r\n\r\nIf you attempt to set a value higher than the value of the _totalValue_ option, the progress bar percentage value will be set to 100%\r\n    \r\nThe totalValue option can be a string that can be converted to number representation for instance if you are using it to monitor download or upload progress, you can use the bytes representation \r\n\r\n```javascript \r\n myDownloadProgress = $('#progress').progressbarManager({      \r\n     totalValue : '40000kb',\r\n     animate : true ,\r\n     stripe : true\r\n  });\r\n  myDownloadProgress.setValue( '4000kb');\r\n```\r\n\r\n##Plugin Options \r\n\r\nName | Type | Description\r\n-----|------|------------\r\ntotalValue | int | The total value of the progress\r\ninitValue | int | Initial value of the progress.\r\n\r\n    \r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}